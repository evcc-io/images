name: Build Armbian Images (evcc + cockpit + caddy)

on:
  workflow_dispatch:
    inputs:
      default_username:
        description: "Default admin username (non-evcc service user)"
        required: true
        default: "admin"
      default_password:
        description: "Default password for the admin user"
        required: true
      hostname:
        description: "Hostname (will be advertised via mDNS as <hostname>.local)"
        required: true
        default: "evcc"
      evcc_channel:
        description: "evcc APT channel (stable or unstable)"
        required: true
        default: "stable"
      release:
        description: "Debian release for Armbian rootfs"
        required: true
        default: "bookworm"
      boards:
        description: |
          Comma-separated Armbian board codes to build (e.g. rpi4b,radxa-e52c). By default we build Raspberry Pi 4 and Radxa E52C.
        required: true
        default: "rpi4b,radxa-e52c"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare Docker and workspace
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io jq
          mkdir -p dist logs

      - name: Build images (matrix within step)
        env:
          DEFAULT_USERNAME: ${{ inputs.default_username }}
          DEFAULT_PASSWORD: ${{ inputs.default_password }}
          HOSTNAME: ${{ inputs.hostname }}
          EVCC_CHANNEL: ${{ inputs.evcc_channel }}
          RELEASE: ${{ inputs.release }}
          BOARDS_CSV: ${{ inputs.boards }}
        run: |
          set -euo pipefail
          IFS=',' read -r -a BOARDS <<< "$BOARDS_CSV"
          chmod +x ./scripts/build-armbian.sh
          for BOARD in "${BOARDS[@]}"; do
            echo "::group::Building for $BOARD"
            bash ./scripts/build-armbian.sh \
              --board "$BOARD" \
              --release "$RELEASE" \
              --hostname "$HOSTNAME" \
              --evcc-channel "$EVCC_CHANNEL" \
              --default-username "$DEFAULT_USERNAME" \
              --default-password "$DEFAULT_PASSWORD"
            echo "::endgroup::"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: armbian-images
          path: dist/**
          if-no-files-found: error
